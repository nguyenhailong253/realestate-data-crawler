version: 2.1

orbs:
  python: circleci/python@2.1.1
  aws-ecr: circleci/aws-ecr@8.1.3

jobs:
  unit-test:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          args: pytest
          pkg-manager: pipenv
      - run:
          name: "Running unit tests..."
          # https://stackoverflow.com/questions/10253826/path-issue-with-pytest-importerror-no-module-named-yadayadayada
          command: "pipenv run python -m pytest ./tests/ -s"
  build-crawler-img: # Deprecated due to network performance of docker containers
    docker:
      - image: cimg/python:3.11.0
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.18
      - aws-ecr/build-and-push-image:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-cli-version: latest
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          create-repo: true
          dockerfile: Dockerfile
          path: .
          region: "${AWS_REGION}"
          repo: $AWS_ECR_REPO
          registry-id: AWS_ECR_REGISTRY_ID
          extra-build-args: "--build-arg DB_USERNAME=$DB_USERNAME --build-arg DB_PASSWORD=$DB_PASSWORD --build-arg DB_HOST=$DB_HOST --build-arg DB_PORT=$DB_PORT --build-arg DB_NAME=$DB_NAME --build-arg DB_SCHEMA=$DB_SCHEMA"
  build-update-ad-img: # Deprecated due to network performance of docker containers
    docker:
      - image: cimg/python:3.11.0
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.18
      - aws-ecr/build-and-push-image:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-cli-version: latest
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          create-repo: true
          dockerfile: Dockerfile.update_ad_removed_date
          path: .
          region: "${AWS_REGION}"
          repo: $AWS_ECR_REPO_FOR_AD_UPDATE
          registry-id: AWS_ECR_REGISTRY_ID
          extra-build-args: "--build-arg DB_USERNAME=$DB_USERNAME --build-arg DB_PASSWORD=$DB_PASSWORD --build-arg DB_HOST=$DB_HOST --build-arg DB_PORT=$DB_PORT --build-arg DB_NAME=$DB_NAME --build-arg DB_SCHEMA=$DB_SCHEMA"
  update-ad-wa:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          args: pytest
          pkg-manager: pipenv
      - run:
          name: "Checking if ads have been removed for properties in Western Australia"
          command: "pipenv run python -m src.update_ad_removed_date -s WA"
  update-ad-vic:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          args: pytest
          pkg-manager: pipenv
      - run:
          name: "Checking if ads have been removed for properties in Victoria"
          command: "pipenv run python -m src.update_ad_removed_date -s VIC"
  update-ad-nsw:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          args: pytest
          pkg-manager: pipenv
      - run:
          name: "Checking if ads have been removed for properties in New South Wales"
          command: "pipenv run python -m src.update_ad_removed_date -s NSW"
  update-ad-qld:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          args: pytest
          pkg-manager: pipenv
      - run:
          name: "Checking if ads have been removed for properties in Queensland"
          command: "pipenv run python -m src.update_ad_removed_date -s QLD"
  update-ad-sa:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          args: pytest
          pkg-manager: pipenv
      - run:
          name: "Checking if ads have been removed for properties in South Australia"
          command: "pipenv run python -m src.update_ad_removed_date -s SA"
  update-ad-the-rest:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          args: pytest
          pkg-manager: pipenv
      - run:
          name: "Checking if ads have been removed for properties in other abbreviations for states"
          command: |
            pipenv run python -m src.update_ad_removed_date -s TAS
            pipenv run python -m src.update_ad_removed_date -s NT
            pipenv run python -m src.update_ad_removed_date -s ACT
            pipenv run python -m src.update_ad_removed_date -s Vic
            pipenv run python -m src.update_ad_removed_date -s vic
            pipenv run python -m src.update_ad_removed_date -s VICTORIA
            pipenv run python -m src.update_ad_removed_date -s Qld
            pipenv run python -m src.update_ad_removed_date -s nsw
            pipenv run python -m src.update_ad_removed_date -s sa
            pipenv run python -m src.update_ad_removed_date -s Queensland
  crawl-data-tas:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          args: pytest
          pkg-manager: pipenv
      - run:
          name: "Crawling all property listings in Tasmania"
          command: "pipenv run python -m src.tenantapp_crawler -s tas"
  crawl-data-nt:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          args: pytest
          pkg-manager: pipenv
      - run:
          name: "Crawling all property listings in Northern Territory"
          command: "pipenv run python -m src.tenantapp_crawler -s nt"
  crawl-data-act:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          args: pytest
          pkg-manager: pipenv
      - run:
          name: "Crawling all property listings in Australian Capital Territory"
          command: "pipenv run python -m src.tenantapp_crawler -s act"
  crawl-data-sa:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          args: pytest
          pkg-manager: pipenv
      - run:
          name: "Crawling all property listings in South Australia"
          command: "pipenv run python -m src.tenantapp_crawler -s sa"
  crawl-data-qld:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          args: pytest
          pkg-manager: pipenv
      - run:
          name: "Crawling all property listings in Queensland"
          command: "pipenv run python -m src.tenantapp_crawler -s qld"
  crawl-data-nsw:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          args: pytest
          pkg-manager: pipenv
      - run:
          name: "Crawling all property listings in New South Wales"
          command: "pipenv run python -m src.tenantapp_crawler -s nsw"
  crawl-data-vic:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          args: pytest
          pkg-manager: pipenv
      - run:
          name: "Crawling all property listings in Victoria"
          command: "pipenv run python -m src.tenantapp_crawler -s vic"
  crawl-data-wa:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          args: pytest
          pkg-manager: pipenv
      - run:
          name: "Crawling all property listings in Western Australia"
          command: "pipenv run python -m src.tenantapp_crawler -s wa"

workflows:
  tenantapp-data-collection:
    when:
      not:
        equal: ["update-ad-schedule", << pipeline.schedule.name >>]
    jobs:
      - unit-test
      - crawl-data-tas:
          requires:
            - unit-test
          filters:
            branches:
              only:
                - master
      - crawl-data-nt:
          requires:
            - unit-test
          filters:
            branches:
              only:
                - master
      - crawl-data-act:
          requires:
            - unit-test
          filters:
            branches:
              only:
                - master
      - crawl-data-sa:
          requires:
            - unit-test
          filters:
            branches:
              only:
                - master
      - crawl-data-qld:
          requires:
            - unit-test
          filters:
            branches:
              only:
                - master
      - crawl-data-nsw:
          requires:
            - unit-test
          filters:
            branches:
              only:
                - master
      - crawl-data-vic:
          requires:
            - unit-test
          filters:
            branches:
              only:
                - master
      - crawl-data-wa:
          requires:
            - unit-test
          filters:
            branches:
              only:
                - master
  tenantapp-update-ad:
    when:
      and:
        - equal: [scheduled_pipeline, << pipeline.trigger_source >>]
        - equal: ["update-ad-schedule", << pipeline.schedule.name >>]
    jobs:
      - unit-test
      - update-ad-wa:
          requires:
            - unit-test
          filters:
            branches:
              only:
                - master
      - update-ad-vic:
          requires:
            - unit-test
          filters:
            branches:
              only:
                - master
      - update-ad-nsw:
          requires:
            - unit-test
          filters:
            branches:
              only:
                - master
      - update-ad-qld:
          requires:
            - unit-test
          filters:
            branches:
              only:
                - master
      - update-ad-sa:
          requires:
            - unit-test
          filters:
            branches:
              only:
                - master
      - update-ad-the-rest:
          requires:
            - unit-test
          filters:
            branches:
              only:
                - master
